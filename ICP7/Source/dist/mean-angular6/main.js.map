{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-create/book-create.component.css","webpack:///./src/app/book-create/book-create.component.html","webpack:///./src/app/book-create/book-create.component.ts","webpack:///./src/app/book-detail/book-detail.component.css","webpack:///./src/app/book-detail/book-detail.component.html","webpack:///./src/app/book-detail/book-detail.component.ts","webpack:///./src/app/book-edit/book-edit.component.css","webpack:///./src/app/book-edit/book-edit.component.html","webpack:///./src/app/book-edit/book-edit.component.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACO;AACgC;AAC5B;AAEpD,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC;CAC/D,CAAC;AACF,IAAM,MAAM,GAAG,2BAA2B,CAAC;AAK3C;IAEE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAEO,gCAAW,GAAnB,UAAoB,KAAwB;QAC1C,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,YAAY,UAAU,CAAC,CAAC,CAAC;YACtC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CACX,2BAAyB,KAAK,CAAC,MAAM,OAAI;iBACzC,eAAa,KAAK,CAAC,KAAO,EAAC,CAAC;QAChC,CAAC;QACD,wDAAwD;QACxD,MAAM,CAAC,uDAAU,CAAC,iDAAiD,CAAC,CAAC;IACvE,CAAC;IAEO,gCAAW,GAAnB,UAAoB,GAAa;QAC/B,IAAI,IAAI,GAAG,GAAG,CAAC;QACf,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,6BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,IAAI,CAC5C,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,4BAAO,GAAP,UAAQ,EAAU;QAChB,IAAM,GAAG,GAAM,MAAM,SAAI,EAAI,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,IAAI,CACzC,0DAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,6BAAQ,GAAR,UAAS,IAAI;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC;aAC7C,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,+BAAU,GAAV,UAAW,EAAU,EAAE,IAAI;QACzB,IAAM,GAAG,GAAM,MAAM,SAAI,EAAI,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC;aACzC,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,+BAAU,GAAV,UAAW,EAAU;QACnB,IAAM,GAAG,GAAM,MAAM,SAAI,EAAI,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC;aACtC,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IA3DU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,UAAU,CA4DtB;IAAD,iBAAC;CAAA;AA5DsB;;;;;;;;;;;;ACbvB,2BAA2B,sBAAsB,0BAA0B,KAAK,0D;;;;;;;;;;;ACAhF,gL;;;;;;;;;;;;;;;;;;;;;ACAwC;AAOxC;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACyB;AACV;AAET;AACQ;AACD;AACoB;AACA;AACN;AACW;AAahC;AAE/C,IAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,kEAAa;QACxB,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE;KAC7B;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,sFAAmB;QAC9B,IAAI,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE;KAChC;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,sFAAmB;QAC9B,IAAI,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE;KAC/B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,gFAAiB;QAC5B,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE;KAC7B;IACD,EAAE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAgCF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA9BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,sFAAmB;gBACnB,sFAAmB;gBACnB,gFAAiB;aAClB;YACD,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC/B,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,6FAAuB;gBACvB,iEAAc;gBACd,iEAAc;gBACd,qEAAkB;gBAClB,gEAAa;gBACb,2EAAwB;gBACxB,gEAAa;gBACb,qEAAkB;gBAClB,kEAAe;gBACf,gEAAa;gBACb,qEAAkB;gBAClB,oEAAiB;aAClB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnFtB,iCAAiC,qBAAqB,qBAAqB,gBAAgB,GAAG,yBAAyB,gBAAgB,GAAG,0CAA0C,wBAAwB,GAAG,iBAAiB,mBAAmB,GAAG,G;;;;;;;;;;;ACAtP,++E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AACT;AACG;AACiE;AAO3G;IAUE,6BAAoB,MAAc,EAAU,GAAe,EAAU,WAAwB;QAAzE,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAP7F,SAAI,GAAW,EAAE,CAAC;QAClB,UAAK,GAAW,EAAE,CAAC;QACnB,gBAAW,GAAW,EAAE,CAAC;QACzB,WAAM,GAAW,EAAE,CAAC;QACpB,cAAS,GAAW,EAAE,CAAC;QACvB,mBAAc,GAAW,EAAE,CAAC;IAG5B,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,aAAa,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,gBAAgB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC9C,CAAC,CAAC;IACL,CAAC;IAED,0CAAY,GAAZ,UAAa,IAAY;QAAzB,iBAQC;QAPC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;aACpB,SAAS,CAAC,aAAG;YACZ,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YACpB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC;QAC9C,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAhCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAW4B,sDAAM,EAAe,uDAAU,EAAuB,0DAAW;OAVlF,mBAAmB,CAiC/B;IAAD,0BAAC;CAAA;AAjC+B;;;;;;;;;;;;ACVhC,iCAAiC,qBAAqB,GAAG,iBAAiB,mBAAmB,GAAG,G;;;;;;;;;;;ACAhG,4OAA4O,YAAY,iDAAiD,kBAAkB,8GAA8G,WAAW,2CAA2C,aAAa,8CAA8C,gBAAgB,iDAAiD,qBAAqB,gDAAgD,0BAA0B,kU;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1oB;AACO;AACC;AACd;AAO1C;IAIE,6BAAoB,KAAqB,EAAU,GAAe,EAAU,MAAc,EAAU,SAAsB;QAAtG,UAAK,GAAL,KAAK,CAAgB;QAAU,QAAG,GAAH,GAAG,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,cAAS,GAAT,SAAS,CAAa;QAF1H,SAAI,GAAG,EAAE,CAAC;IAGV,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC7C,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,EAAE,SAAS,EAAC;gBACpD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,KAAK;aACxB,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAED,4CAAc,GAAd,UAAe,EAAE;QAAjB,iBAMC;QALC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;aACjB,SAAS,CAAC,cAAI;YACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAU,GAAV,UAAW,EAAE;QAAb,iBAQC;QAPC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC;aACpB,SAAS,CAAC,aAAG;YACV,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;IAnCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAK2B,8DAAc,EAAe,uDAAU,EAAkB,sDAAM,EAAqB,uEAAW;OAJ/G,mBAAmB,CAqC/B;IAAD,0BAAC;CAAA;AArC+B;;;;;;;;;;;;ACVhC,iCAAiC,qBAAqB,qBAAqB,gBAAgB,GAAG,yBAAyB,gBAAgB,GAAG,0CAA0C,wBAAwB,GAAG,iBAAiB,mBAAmB,GAAG,G;;;;;;;;;;;ACAtP,2lF;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AACO;AACb;AACiE;AAO3G;IAUE,2BAAoB,MAAc,EAAU,KAAqB,EAAU,GAAe,EAAU,WAAwB;QAAxG,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,QAAG,GAAH,GAAG,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAP5H,SAAI,GAAW,EAAE,CAAC;QAClB,UAAK,GAAW,EAAE,CAAC;QACnB,gBAAW,GAAW,EAAE,CAAC;QACzB,WAAM,GAAW,EAAE,CAAC;QACpB,cAAS,GAAW,EAAE,CAAC;QACvB,mBAAc,GAAW,EAAE,CAAC;IAG5B,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACjC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3C,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;oBACrB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,cAAc,EAAE,IAAI,CAAC,cAAc;oBACnC,WAAW,EAAE,IAAI,CAAC,WAAW;iBAC9B,CAAC;YACH,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,aAAa,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,gBAAgB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC9C,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ,UAAa,IAAY;QAAzB,iBAQC;QAPC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;aACnC,SAAS,CAAC,aAAG;YACZ,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YACpB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,EAAC,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAC,CAAC,CAAC;QAChF,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA7CU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAW4B,sDAAM,EAAiB,8DAAc,EAAe,uDAAU,EAAuB,0DAAW;OAVjH,iBAAiB,CA+C7B;IAAD,wBAAC;CAAA;AA/C6B;;;;;;;;;;;;ACV9B,sCAAsC,kBAAkB,2BAA2B,sBAAsB,qBAAqB,mBAAmB,GAAG,eAAe,+BAA+B,kCAAkC,GAAG,iBAAiB,mBAAmB,GAAG,iBAAiB,sIAAsI,0BAA0B,GAAG,oBAAoB,8IAA8I,iBAAiB,gCAAgC,iCAAiC,2BAA2B,uBAAuB,GAAG,gBAAgB,uBAAuB,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,gBAAgB,GAAG,qBAAqB,iBAAiB,eAAe,0BAA0B,uBAAuB,iBAAiB,2BAA2B,uBAAuB,oBAAoB,0BAA0B,GAAG,4BAA4B,4BAA4B,iBAAiB,GAAG,G;;;;;;;;;;;ACAvtC,0xBAA0xB,cAAc,gNAAgN,eAAe,mNAAmN,gBAAgB,gvBAAgvB,2BAA2B,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj6D;AAC1C;AACU;AACI;AACf;AAOzC;IAME,uBAAoB,GAAe,EAAU,MAAa,EAAU,SAAsB;QAAtE,QAAG,GAAH,GAAG,CAAY;QAAU,WAAM,GAAN,MAAM,CAAO;QAAU,cAAS,GAAT,SAAS,CAAa;QAH1F,qBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QACjE,eAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAG1C,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;aAClB,SAAS,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAU,GAAV,UAAW,KAAK,EAAC,OAAO;QAAxB,iBAYC;QAXC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5C,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,EAAE,SAAS,EAAC;gBACpD,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,KAAK;aACxB,CAAC,CAAC;QACL,CAAC,EAAC,CAAC,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAnCU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAOyB,uDAAU,EAAiB,sDAAM,EAAqB,uEAAW;OAN/E,aAAa,CAoCzB;IAAD,oBAAC;CAAA;AApCyB;AAsC1B;IAAoC,kCAAe;IACjD,wBAAoB,GAAe;QAAnC,YACE,iBAAO,SACR;QAFmB,SAAG,GAAH,GAAG,CAAY;;IAEnC,CAAC;IAED,gCAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,mCAAU,GAAV;IAEA,CAAC;IACH,qBAAC;AAAD,CAAC,CAZmC,mEAAU,GAY7C;;;;;;;;;;;;;;;AC7DD;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {Observable, of, throwError} from 'rxjs';\nimport {HttpClient, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, tap, map} from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = 'http://localhost:3000/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || {};\n  }\n\n  getBooks(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getBook(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postBook(data): Observable<any> {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateBook(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteBook(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \".header {\\r\\n    color:#3f51b5;\\r\\n    text-align:center;\\r\\n}\\r\\n\\r\\n/*// \\\"start\\\": \\\"ng build && node ./bin/www\\\",*/\"","module.exports = \"<div class=\\\"bg-image\\\"></div>\\n<h1 class=\\\"header\\\">Library Management System</h1>\\n<div class=\\\"bg-text\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BookComponent } from './book/book.component';\nimport { BookDetailComponent } from './book-detail/book-detail.component';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { BookEditComponent } from './book-edit/book-edit.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatSnackBarModule } from '@angular/material';\n\nconst appRoutes: Routes = [\n  {\n    path: 'books',\n    component: BookComponent,\n    data: { title: 'Book List' }\n  },\n  {\n    path: 'book-details/:id',\n    component: BookDetailComponent,\n    data: { title: 'Book Details' }\n  },\n  {\n    path: 'book-create',\n    component: BookCreateComponent,\n    data: { title: 'Create Book' }\n  },\n  {\n    path: 'book-edit/:id',\n    component: BookEditComponent,\n    data: { title: 'Edit Book' }\n  },\n  { path: '',\n    redirectTo: '/books',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookComponent,\n    BookDetailComponent,\n    BookCreateComponent,\n    BookEditComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/books']\\\">\\n    <mat-icon>list</mat-icon>\\n  </a>\\n</div>\\n<form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('isbn').valid && bookForm.get('isbn').touched\\\">Please enter ISBN</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('title').valid && bookForm.get('title').touched\\\">Please enter Book Title</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('author').valid && bookForm.get('author').touched\\\">Please enter Book Author</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\n              [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('description').valid && bookForm.get('description').touched\\\">Please enter Book Description</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('publisher').valid && bookForm.get('publisher').touched\\\">Please enter Publisher</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('published_year').valid && bookForm.get('published_year').touched\\\">Please enter Published Year</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\">\\n      <mat-icon>save</mat-icon>\\n    </button>\\n  </div>\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ApiService} from '../api.service';\nimport {FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.css']\n})\nexport class BookCreateComponent implements OnInit {\n\n  bookForm: FormGroup;\n  isbn: string = '';\n  title: string = '';\n  description: string = '';\n  author: string = '';\n  publisher: string = '';\n  published_year: string = '';\n\n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.bookForm = this.formBuilder.group({\n      'isbn': [null, Validators.required],\n      'title': [null, Validators.required],\n      'description': [null, Validators.required],\n      'author': [null, Validators.required],\n      'publisher': [null, Validators.required],\n      'published_year': [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form: NgForm) {\n    this.api.postBook(form)\n      .subscribe(res => {\n        let id = res['_id'];\n        this.router.navigate(['/book-details', id]);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 500px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/books']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title><h2>{{book.title}}</h2></mat-card-title>\\n    <mat-card-subtitle>{{book.description}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <dl>\\n      <dt>ISBN:</dt>\\n      <dd>{{book.isbn}}</dd>\\n      <dt>Author:</dt>\\n      <dd>{{book.author}}</dd>\\n      <dt>Publisher:</dt>\\n      <dd>{{book.publisher}}</dd>\\n      <dt>Publish Year:</dt>\\n      <dd>{{book.published_year}}</dd>\\n      <dt>Update Date:</dt>\\n      <dd>{{book.updated_date | date}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-edit', book._id]\\\"><mat-icon>edit</mat-icon></a>\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteBook(book._id)\\\"><mat-icon>delete</mat-icon></a>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ApiService} from '../api.service';\n\n@Component({\n  selector: 'app-book-detail',\n  templateUrl: './book-detail.component.html',\n  styleUrls: ['./book-detail.component.css']\n})\nexport class BookDetailComponent implements OnInit {\n\n  book = {};\n\n  constructor(private route: ActivatedRoute, private api: ApiService, private router: Router, private _snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.getBookDetails(this.route.snapshot.params['id']);\n    console.log(this.route.snapshot.queryParams);\n    if(this.route.snapshot.queryParams['updated']) {\n        this._snackBar.open('Updated successfully', \"Success\",{\n          duration: 5000,\n          horizontalPosition: \"right\",\n          verticalPosition: \"top\",\n        });\n    }\n  }\n\n  getBookDetails(id) {\n    this.api.getBook(id)\n      .subscribe(data => {\n        console.log(data);\n        this.book = data;\n      });\n  }\n\n  deleteBook(id) {\n    this.api.deleteBook(id)\n      .subscribe(res => {\n          this.router.navigate(['/books']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/books']\\\">\\n      <mat-icon>list</mat-icon>\\n    </a>\\n  </div>\\n  <form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onUpdateBook(bookForm.value)\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!bookForm.get('isbn').valid && bookForm.get('isbn').touched\\\">Please enter ISBN</span>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!bookForm.get('title').valid && bookForm.get('title').touched\\\">Please enter Book Title</span>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!bookForm.get('author').valid && bookForm.get('author').touched\\\">Please enter Book Author</span>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\n                [errorStateMatcher]=\\\"matcher\\\"></textarea>\\n      <mat-error>\\n        <span *ngIf=\\\"!bookForm.get('description').valid && bookForm.get('description').touched\\\">Please enter Book Description</span>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!bookForm.get('publisher').valid && bookForm.get('publisher').touched\\\">Please enter Publisher</span>\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\"\\n             [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error>\\n        <span *ngIf=\\\"!bookForm.get('published_year').valid && bookForm.get('published_year').touched\\\">Please enter Published Year</span>\\n      </mat-error>\\n    </mat-form-field>\\n    <div class=\\\"button-row\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\">\\n        <mat-icon>save</mat-icon>\\n      </button>\\n    </div>\\n  </form>\\n  \"","import {Component, OnInit} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {ApiService} from '../api.service';\nimport {FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent implements OnInit {\n  bookForm: FormGroup;\n  public bookId;\n  isbn: string = '';\n  title: string = '';\n  description: string = '';\n  author: string = '';\n  publisher: string = '';\n  published_year: string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n     this.bookId = params['id'];\n     this.api.getBook(this.bookId).subscribe(data => {\n      this.bookForm.setValue({\n        isbn: data.isbn,\n        title: data.title,\n        author: data.author,\n        publisher: data.publisher,\n        published_year: data.published_year,\n        description: data.description\n      })\n     }) \n    });\n    this.bookForm = this.formBuilder.group({\n      'isbn': [null, Validators.required],\n      'title': [null, Validators.required],\n      'description': [null, Validators.required],\n      'author': [null, Validators.required],\n      'publisher': [null, Validators.required],\n      'published_year': [null, Validators.required]\n    });\n  }\n\n  onUpdateBook(form: NgForm) {\n    this.api.updateBook(this.bookId, form)\n      .subscribe(res => {\n        let id = res['_id'];\n        this.router.navigate(['/book-details', id],{ queryParams: { updated: true }});\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\n/* .wrapper {\\n  background: url(\\\"https://images.pexels.com/photos/757855/pexels-photo-757855.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\\\");\\n  background-size:cover;\\n} */\\n\\n.hero-image {\\n  background-image: url(\\\"https://images.pexels.com/photos/2177482/pexels-photo-2177482.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\\\");\\n  height: 50vh;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  position: relative;\\n}\\n\\n.hero-text {\\n  text-align: center;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  color: #fff;\\n}\\n\\n.hero-text .btn {\\n  border: none;\\n  outline: 0;\\n  display: inline-block;\\n  padding: 10px 25px;\\n  color: black;\\n  background-color: #fff;\\n  text-align: center;\\n  cursor: pointer;\\n  text-decoration: none;\\n}\\n\\n.hero-text a.btn:hover {\\n  background-color: black;\\n  color: white;\\n}\\n\"","module.exports = \"<div class=\\\"hero-image\\\">\\n  <div class=\\\"hero-text\\\">\\n    <h1>UMKC Library Management System</h1>\\n    <a class=\\\"btn\\\" href=\\\"#\\\">Read More</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-create']\\\">\\n    <mat-icon>add</mat-icon>\\n  </a>\\n</div>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"books\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"isbn\\\">\\n      <th mat-header-cell *matHeaderCellDef> ISB11N</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"isbn-col\\\"> {{element.isbn}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef> Title</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n    </ng-container>\\n\\n    <!-- Author Column -->\\n    <ng-container matColumnDef=\\\"author\\\">\\n      <th mat-header-cell *matHeaderCellDef> Author</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author}} </td>\\n    </ng-container>\\n\\n    <!-- Edit Column -->\\n    <ng-container matColumnDef=\\\"edit\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-edit', element._id]\\\"><mat-icon>edit</mat-icon></a></td>\\n    </ng-container>\\n\\n    <!-- Delete Column -->\\n    <ng-container matColumnDef=\\\"delete\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"><a mat-raised-button color=\\\"warn\\\"><mat-icon (click)=\\\"deleteBook($event,element)\\\">delete</mat-icon></a></td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/book-details/', row._id]\\\"></tr>\\n  </table>\\n</div>\\n\"","import {Component, OnInit, ViewChild, ElementRef, TemplateRef} from '@angular/core';\nimport {ApiService} from '../api.service';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  books: any;\n  displayedColumns = ['isbn', 'title', 'author', 'edit', 'delete'];\n  dataSource = new BookDataSource(this.api);\n\n  constructor(private api: ApiService, private router:Router, private _snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.getBooks();\n  }\n\n  getBooks() {\n    this.api.getBooks()\n    .subscribe(res => {\n      console.log(res);\n      this.books = res;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  deleteBook(event,element) {\n    event.stopPropagation();\n    this.api.deleteBook(element._id).subscribe(res => {\n      this.getBooks();\n      this._snackBar.open('Deleted successfully', \"Deleted\",{\n        duration: 5000,\n        horizontalPosition: \"right\",\n        verticalPosition: \"top\",\n      });\n    },(err => {\n      console.log(err)\n    }))\n  }\n}\n\nexport class BookDataSource extends DataSource<any> {\n  constructor(private api: ApiService) {\n    super();\n  }\n\n  connect() {\n    return this.api.getBooks();\n  }\n\n  disconnect() {\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}